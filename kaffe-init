#!/bin/bash

cmd_default() {
  get_web_server_group
  do_make
  write_settings_files
  setup_files_dir_and_rights
  copy_conf_files
  copy_modules
  apply_patches
}

get_web_server_group() {

  # Get the web server group.
  # If the group name is not in the settings file, then ask for the group.
  if [ -z "$webserver_group" ]
  then
    # First let us try to look up the group name.
    webserver_group=$(apachectl -S 2> /dev/null | grep -E ^Group | sed -e 's/.*name="\([^"]*\)".*/\1/'; test "${PIPESTATUS[1]}" -eq 0)
    if [ "$?" -ne "0" ]; then
      case $( uname -s ) in
        # Mac? Probably _www
        Darwin) webserver_group='_www';;
        # Other? Hmm. Try this.
        *)     webserver_group='www-data';;
      esac
    fi

    while true; do
        read -p "Is the name of your web server group $webserver_group? " yn
        case $yn in
            [Yy]* ) break;;
            [Nn]* ) echo "Please enter the name of the web server group on this machine: ";read webserver_group;break;;
            * ) echo "Please answer yes or no.";;
        esac
    done
    # Save the web server group to the settings file.
    echo "webserver_group=$webserver_group" >> ~/.lav-kaffe
  fi
}

do_make() {
  # Copy the make file to the drupal-to-be root.
  cp "$KAFFE_DIR/resources/kaffe.make" .

  # Run the make file this once like God intended make files to be run.
  drush make kaffe.make .
  echo "Downloaded basic modules."

  # Remove make file after use.
  rm kaffe.make

  # Get Drupal version number so we can download a translation.
  drupal_version=$(grep --max-count=1 Drupal CHANGELOG.txt | sed 's/Drupal\ \([0-9]\.[0-9]*\).*$/\1/')
  # Now download it.
  curl "http://ftp.drupal.org/files/translations/7.x/drupal/drupal-${drupal_version}.da.po" -o "profiles/minimal/translations/drupal-${drupal_version}.da.po"
  echo "Downloaded translations."
}

write_settings_files() {
  # Do some file juggling to prepend inclusion of our settings files to the
  # default.settings.php. The reason we don't just write to settings.php is that
  # when drupal is installed the file will be overwritten with
  # default.settings.php
  cat <<- EOF > temp.txt
<?php

// Include our settings. Comment out dev on relevant platforms, but always leave
// common.
require_once('common.settings.php');
require_once('dev.settings.php');
EOF
  tail -n +2 sites/default/default.settings.php >> temp.txt
  cp temp.txt sites/default/default.settings.php
  rm temp.txt
  cp sites/default/default.settings.php sites/default/settings.php

  # Copy our settings files.
  cp "$KAFFE_DIR/resources/settings/common.settings.php" sites/default/
  cp "$KAFFE_DIR/resources/settings/dev.settings.php" sites/default/
  echo "Copied initial settings."
}

setup_files_dir_and_rights() {
  # Make the files directory.
  mkdir -p sites/default/files
  # Set file rights.
  echo "About to set ownership on sites/default using sudo."
  sudo chown -R  "$(whoami):$webserver_group" sites/default
  chmod -R g+rw sites/default
  echo "Set up files folder and file rights."
}

copy_conf_files() {
  cp "$KAFFE_DIR/resources/circle/circle.yml" .
  cat "$KAFFE_DIR/resources/git/gitignore" >> .gitignore
  cp "$KAFFE_DIR/resources/scrutinizer/.scrutinizer.yml" .scrutinizer.yml
}

copy_modules() {
  cp -r "$KAFFE_DIR/resources/modules/reload" sites/all/modules/
  # If there is a variable in the ~/.lav-kaffe pointing to a local folder with
  # modules, then symlink to that. Useful for devel, stage_file_proxy,
  # honeybadger, or bad_judgement.
  if [ ! -z "$localmodules" ]
  then
    # Use ZZ prefix so that the modules in the folder are loaded last. The
    # modules are loaded alphabetically if not specifically weighted.
    ln -s "$localmodules" sites/all/modules/contrib/ZZ_SHARED_MODULES
  fi
}

apply_patches() {
  drush bandaid-patch \
  --home=https://www.drupal.org/node/2188491 \
  --reason="Fix duplicate roles bug" \
  https://www.drupal.org/files/issues/2188491-features-multilingual-2.patch \
  sites/all/modules/contrib/secure_permissions

  drush bandaid-patch \
  --home=https://www.drupal.org/node/1744274 \
  --reason="Fix duplicate roles bug" \
  https://www.drupal.org/files/secure_permissions-duplicate_role_exception-1744274-4.patch \
  sites/all/modules/contrib/secure_permissions

  drush bandaid-patch \
  --home=https://www.drupal.org/node/1853550 \
  --reason="Add support for CKEditor 4" \
  https://www.drupal.org/files/wysiwyg-ckeditor-4.1853550.172-do-not-test.patch \
  sites/all/modules/contrib/wysiwyg

  drush bandaid-patch \
  --home=https://www.drupal.org/node/1802394 \
  --reason="Avoid \"Warning: file_get_contents from 7.x-2.1 to 7.x-2.2\"" \
  https://www.drupal.org/files/wysiwyg-1802394-4.patch \
  sites/all/modules/contrib/wysiwyg
}
