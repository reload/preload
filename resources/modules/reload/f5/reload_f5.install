<?php

/**
 * Implements hook_install().
 */
function reload_f5_install() {

  $role = new stdClass();
  $role->name = 'editor';
  user_role_save($role);

  $editor_role = user_role_load_by_name('editor');

// Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

// Add text formats.
  $rich_text_format = array(
    'format' => 'rich_text',
    'name' => 'Rich text',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      'media_filter' => array(
        'weight' => 3,
        'status' => 1,
      ),
      'pathologic' => array(
        'weight' => 4,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $rich_text_format = (object) $rich_text_format;
  filter_format_save($rich_text_format);

// Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  $rich_text_permission = filter_permission_name($rich_text_format);
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array($filtered_html_permission));
  user_role_grant_permissions($editor_role->rid, array($filtered_html_permission, $rich_text_permission));



  // Create simple content types.
  $types = array(
    array(
      'type' => 'article',
      'name' => st('Article'),
      'base' => 'node_content',
      'description' => st('Use <em>articles</em> for background and information heavy pages.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
    array(
      'type' => 'news',
      'name' => st('Piece of news'),
      'base' => 'node_content',
      'description' => st("Use <em>pieces of news</em> to express news i.e. in your organisation or field of work."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Setup wysiwyg.
  $fields = array(
    'format' => 'rich_text',
    'editor' => 'ckeditor',
    'settings' => serialize(array(
      'default' => 1,
      'user_choose' => 0,
      'show_toggle' => 1,
      'theme' => 'advanced',
      'language' => 'en',
      'buttons' => array(
        'default' => array(
          'Bold' => 1,
          'Italic' => 1,
          'JustifyLeft' => 1,
          'JustifyCenter' => 1,
          'JustifyRight' => 1,
          'BulletedList' => 1,
          'NumberedList' => 1,
          'Format' => 1,
        ),
        'linkit' => array(
          'linkit' => 1
        ),
        'drupal' => array (
          'media' => 1,
        ),
      ),
      'toolbar_loc' => 'top',
      'toolbar_align' => 'left',
      'path_loc' => 'bottom',
      'resizing' => 1,
      'default_toolbar_grouping' => 0,
      'verify_html' => 1,
      'preformatted' => 0,
      'convert_fonts_to_spans' => 1,
      'remove_linebreaks' => 1,
      'apply_source_formatting' => 0,
      'paste_auto_cleanup_on_paste' => 0,
      'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
      'css_setting' => 'theme',
      'css_path' => '',
      'css_classes' => '',
    ))
  );
  db_insert('wysiwyg')->fields($fields)->execute();

}



}
